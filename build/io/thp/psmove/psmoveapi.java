/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.thp.psmove;

public class psmoveapi {
  public static void psmove_disable_remote() {
    psmoveapiJNI.psmove_disable_remote();
  }

  public static void psmove_disable_local() {
    psmoveapiJNI.psmove_disable_local();
  }

  public static void _psmove_write_data(SWIGTYPE_p__PSMove move, SWIGTYPE_p_unsigned_char data, int length) {
    psmoveapiJNI._psmove_write_data(SWIGTYPE_p__PSMove.getCPtr(move), SWIGTYPE_p_unsigned_char.getCPtr(data), length);
  }

  public static void _psmove_read_data(SWIGTYPE_p__PSMove move, SWIGTYPE_p_unsigned_char data, int length) {
    psmoveapiJNI._psmove_read_data(SWIGTYPE_p__PSMove.getCPtr(move), SWIGTYPE_p_unsigned_char.getCPtr(data), length);
  }

  public static void psmove_reinit() {
    psmoveapiJNI.psmove_reinit();
  }

  public static int psmove_count_connected() {
    return psmoveapiJNI.psmove_count_connected();
  }

  public static SWIGTYPE_p__PSMove psmove_connect_by_id(int id) {
    long cPtr = psmoveapiJNI.psmove_connect_by_id(id);
    return (cPtr == 0) ? null : new SWIGTYPE_p__PSMove(cPtr, false);
  }

  public static SWIGTYPE_p__PSMove psmove_connect() {
    long cPtr = psmoveapiJNI.psmove_connect();
    return (cPtr == 0) ? null : new SWIGTYPE_p__PSMove(cPtr, false);
  }

  public static ConnectionType psmove_connection_type(SWIGTYPE_p__PSMove move) {
    return ConnectionType.swigToEnum(psmoveapiJNI.psmove_connection_type(SWIGTYPE_p__PSMove.getCPtr(move)));
  }

  public static int psmove_btaddr_from_string(String string, SWIGTYPE_p_a_6__unsigned_char dest) {
    return psmoveapiJNI.psmove_btaddr_from_string(string, SWIGTYPE_p_a_6__unsigned_char.getCPtr(dest));
  }

  public static int psmove_get_btaddr(SWIGTYPE_p__PSMove move, SWIGTYPE_p_a_6__unsigned_char addr) {
    return psmoveapiJNI.psmove_get_btaddr(SWIGTYPE_p__PSMove.getCPtr(move), SWIGTYPE_p_a_6__unsigned_char.getCPtr(addr));
  }

  public static int psmove_controller_btaddr(SWIGTYPE_p__PSMove move, SWIGTYPE_p_a_6__unsigned_char addr) {
    return psmoveapiJNI.psmove_controller_btaddr(SWIGTYPE_p__PSMove.getCPtr(move), SWIGTYPE_p_a_6__unsigned_char.getCPtr(addr));
  }

  public static String psmove_get_serial(SWIGTYPE_p__PSMove move) {
    return psmoveapiJNI.psmove_get_serial(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static int psmove_is_remote(SWIGTYPE_p__PSMove move) {
    return psmoveapiJNI.psmove_is_remote(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static int psmove_set_btaddr(SWIGTYPE_p__PSMove move, SWIGTYPE_p_a_6__unsigned_char addr) {
    return psmoveapiJNI.psmove_set_btaddr(SWIGTYPE_p__PSMove.getCPtr(move), SWIGTYPE_p_a_6__unsigned_char.getCPtr(addr));
  }

  public static int psmove_pair(SWIGTYPE_p__PSMove move) {
    return psmoveapiJNI.psmove_pair(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static int psmove_pair_custom(SWIGTYPE_p__PSMove move, String btaddr_string) {
    return psmoveapiJNI.psmove_pair_custom(SWIGTYPE_p__PSMove.getCPtr(move), btaddr_string);
  }

  public static void psmove_set_leds(SWIGTYPE_p__PSMove move, short r, short g, short b) {
    psmoveapiJNI.psmove_set_leds(SWIGTYPE_p__PSMove.getCPtr(move), r, g, b);
  }

  public static void psmove_set_rumble(SWIGTYPE_p__PSMove move, short rumble) {
    psmoveapiJNI.psmove_set_rumble(SWIGTYPE_p__PSMove.getCPtr(move), rumble);
  }

  public static int psmove_update_leds(SWIGTYPE_p__PSMove move) {
    return psmoveapiJNI.psmove_update_leds(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static int psmove_poll(SWIGTYPE_p__PSMove move) {
    return psmoveapiJNI.psmove_poll(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static long psmove_get_buttons(SWIGTYPE_p__PSMove move) {
    return psmoveapiJNI.psmove_get_buttons(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static short psmove_get_battery(SWIGTYPE_p__PSMove move) {
    return psmoveapiJNI.psmove_get_battery(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static int psmove_get_temperature(SWIGTYPE_p__PSMove move) {
    return psmoveapiJNI.psmove_get_temperature(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static short psmove_get_trigger(SWIGTYPE_p__PSMove move) {
    return psmoveapiJNI.psmove_get_trigger(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static void psmove_get_accelerometer(SWIGTYPE_p__PSMove move, SWIGTYPE_p_int ax, SWIGTYPE_p_int ay, SWIGTYPE_p_int az) {
    psmoveapiJNI.psmove_get_accelerometer(SWIGTYPE_p__PSMove.getCPtr(move), SWIGTYPE_p_int.getCPtr(ax), SWIGTYPE_p_int.getCPtr(ay), SWIGTYPE_p_int.getCPtr(az));
  }

  public static void psmove_get_gyroscope(SWIGTYPE_p__PSMove move, SWIGTYPE_p_int gx, SWIGTYPE_p_int gy, SWIGTYPE_p_int gz) {
    psmoveapiJNI.psmove_get_gyroscope(SWIGTYPE_p__PSMove.getCPtr(move), SWIGTYPE_p_int.getCPtr(gx), SWIGTYPE_p_int.getCPtr(gy), SWIGTYPE_p_int.getCPtr(gz));
  }

  public static void psmove_get_magnetometer(SWIGTYPE_p__PSMove move, SWIGTYPE_p_int mx, SWIGTYPE_p_int my, SWIGTYPE_p_int mz) {
    psmoveapiJNI.psmove_get_magnetometer(SWIGTYPE_p__PSMove.getCPtr(move), SWIGTYPE_p_int.getCPtr(mx), SWIGTYPE_p_int.getCPtr(my), SWIGTYPE_p_int.getCPtr(mz));
  }

  public static void psmove_disconnect(SWIGTYPE_p__PSMove move) {
    psmoveapiJNI.psmove_disconnect(SWIGTYPE_p__PSMove.getCPtr(move));
  }

  public static int count_connected() {
    return psmoveapiJNI.count_connected();
  }

  public static void reinit() {
    psmoveapiJNI.reinit();
  }

}
